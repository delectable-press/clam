server {
    listen 80;
    server_name "";

    #fastcgi_cache start
    set $no_cache 0;

    # POST requests and urls with a query string should always go to PHP
    if ($request_method = POST) {
            set $no_cache 1;
            set $NoCacheReason "POST";
    }
    if ($query_string != "") {
            set $no_cache 1;
            set $NoCacheReason "QueryString";
    }

    # Don't cache uris containing the following segments
    if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
            set $no_cache 1;
            set $NoCacheReason "SpecialPage";
    }

    # Don't use the cache for logged in users or recent commenters
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
            set $no_cache 1;
            set $NoCacheReason "LoggedIn";
    }

    root /var/www/html;
    index index.php;

    location ~ /\. {
      deny all;
    }

    location ~* /(?:uploads|files)/.*\.php$ {
    	deny all;
    }

    location ~ ^/wp-(.*)$ {
      try_files $uri $uri/ @wp;
    }

    location ~ ^/xmlrpc.php {
      try_files $uri $uri/ @wp;
    }

    location @wp {
      rewrite ^(/.*)$ /wordpress$1 last;
    }

    location / {
    	try_files $uri $uri/ /index.php?$args;
    }

    location /favicon.ico {
        log_not_found off;
    }

    location ~ ^/(fpm-status|ping)$ {
         access_log off;
         include fastcgi_params;
         fastcgi_pass php;
    }

    location ~ /purge(/.*) {
            # Uncomment the following two lines to allow purge only from the webserver
            #allow 127.0.0.1;
    	#deny all;

            fastcgi_cache_purge WORDPRESS "$scheme$request_method$host$1";
            rewrite /purge(/.*) / permanent;
    }

    location ~ \.php$ {
        # Zero-day exploit defense.
        		# http://forum.nginx.org/read.php?2,88845,page=3
        		# Won't work properly (404 error) if the file is not stored on this server, which is entirely possible with php-fpm/php-fcgi.
        		# Comment the 'try_files' line out if you set up php-fpm/php-fcgi on another machine.  And then cross your fingers that you won't get hacked.
        		try_files $uri =404;

        		fastcgi_split_path_info ^(.+\.php)(/.+)$;
        		#NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
        		add_header Cached "yes";

        		if ($no_cache) {
        		  add_header Cached "no";
        		  add_header NoCachedReason $NoCacheReason;
        		}

        		include fastcgi_params;
        		fastcgi_index index.php;
            fastcgi_read_timeout 120;
        		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        	  fastcgi_intercept_errors on;
        		fastcgi_pass php;

        		fastcgi_cache_bypass $no_cache;
            fastcgi_no_cache $no_cache;

            fastcgi_cache WORDPRESS;
            fastcgi_cache_valid 200 60m;
    }
}